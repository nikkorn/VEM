package server.world;

import server.Constants;
import server.world.generation.WorldGenerator;
import server.world.placement.Placement;

/**
 * A factory for chunk entities.
 */
public class ChunkFactory {
	
	/**
	 * Create a chunk.
	 * 
	 * This chunk could already exist and be defined in the world save directory.
	 * If so, then this chunk will reflect that state.
	 * 
	 * If this chunk does not already exist (is not defined in the world save directory)
	 * then it is the job of the world generator to spawn initial placements.
	 * 
	 * @param generator The world generator.
	 * @param x The x position of the chunk.
	 * @param y The y position of the chunk.
	 * @return The created chunk.
	 */
	public static Chunk createChunk(WorldGenerator generator, int x, int y) {
		// Firstly, create the static world tiles for the chunk.
		TileType[][] tiles = createChunkTiles(generator, x, y);
		// Secondly, create the chunk placements. How this is done depends on whether we already
		// have state for this chunk saved to disk. In that case we will read the existing placement 
		// state from disk for this chunk. If this is the first time we are creating this chunk
		// (there is no chunk state saved to disk) then it is the responsibility of the world
		// generator to create some nice initial naturally-occurring placements.
		Placement[][] placements = createChunkPlacements(generator, x, y);
		// Create and return the chunk.
		return new Chunk(x, y, tiles, placements);
	}
	
	/**
	 * Create the multi-dimensional array that will hold the tile types for the chunk.
	 * @param worldGenerator The world generator.
	 * @param x The x position of the chunk.
	 * @param y The y position of the chunk.
	 * @return The multi-dimensional array holding the tile types for the chunk.
	 */
	private static TileType[][] createChunkTiles(WorldGenerator worldGenerator, int x, int y) {
		// Create the multi-dimensional array that will hold the tile types for the chunk.
		TileType[][] tiles = new TileType[Constants.WORLD_CHUNK_SIZE][Constants.WORLD_CHUNK_SIZE];
		int tileXOffset = x * Constants.WORLD_CHUNK_SIZE;
		int tileYOffset = y * Constants.WORLD_CHUNK_SIZE;
		for (int tileX = 0; tileX < Constants.WORLD_CHUNK_SIZE; tileX++) {
			for (int tileY = 0; tileY < Constants.WORLD_CHUNK_SIZE; tileY++) {
				tiles[tileX][tileY] = worldGenerator.getTileAt(tileX + tileXOffset, tileY + tileYOffset);
			}
		}
		// Return the static tile type array.
		return tiles;
	}
	
	/**
	 * Create the multi-dimensional array that will hold the placements for the chunk.
	 * These may be read from disk, or generated by the world generator.
	 * @param worldGenerator The world generator.
	 * @param x The x position of the chunk.
	 * @param y The y position of the chunk.
	 * @return The multi-dimensional array holding the placements for the chunk.
	 */
	private static Placement[][] createChunkPlacements(WorldGenerator worldGenerator, int x, int y) {
		return null;
	}
}